//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DVI
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://dvimonitor.pilotdrift.dk/", ItemName="string")]
    public class ArrayOfString : System.Collections.Generic.List<string>
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dvimonitor.pilotdrift.dk/", ConfigurationName="DVI.monitorSoap")]
    public interface monitorSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dvimonitor.pilotdrift.dk/StockTemp", ReplyAction="*")]
        System.Threading.Tasks.Task<DVI.StockTempResponse> StockTempAsync(DVI.StockTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dvimonitor.pilotdrift.dk/StockHumidity", ReplyAction="*")]
        System.Threading.Tasks.Task<DVI.StockHumidityResponse> StockHumidityAsync(DVI.StockHumidityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dvimonitor.pilotdrift.dk/OutdoorTemp", ReplyAction="*")]
        System.Threading.Tasks.Task<DVI.OutdoorTempResponse> OutdoorTempAsync(DVI.OutdoorTempRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dvimonitor.pilotdrift.dk/OutdoorHumidity", ReplyAction="*")]
        System.Threading.Tasks.Task<DVI.OutdoorHumidityResponse> OutdoorHumidityAsync(DVI.OutdoorHumidityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dvimonitor.pilotdrift.dk/StockItemsUnderMin", ReplyAction="*")]
        System.Threading.Tasks.Task<DVI.StockItemsUnderMinResponse> StockItemsUnderMinAsync(DVI.StockItemsUnderMinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dvimonitor.pilotdrift.dk/StockItemsOverMax", ReplyAction="*")]
        System.Threading.Tasks.Task<DVI.StockItemsOverMaxResponse> StockItemsOverMaxAsync(DVI.StockItemsOverMaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dvimonitor.pilotdrift.dk/StockItemsMostSold", ReplyAction="*")]
        System.Threading.Tasks.Task<DVI.StockItemsMostSoldResponse> StockItemsMostSoldAsync(DVI.StockItemsMostSoldRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StockTemp", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class StockTempRequest
    {
        
        public StockTempRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StockTempResponse", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class StockTempResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public double StockTempResult;
        
        public StockTempResponse()
        {
        }
        
        public StockTempResponse(double StockTempResult)
        {
            this.StockTempResult = StockTempResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StockHumidity", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class StockHumidityRequest
    {
        
        public StockHumidityRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StockHumidityResponse", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class StockHumidityResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public double StockHumidityResult;
        
        public StockHumidityResponse()
        {
        }
        
        public StockHumidityResponse(double StockHumidityResult)
        {
            this.StockHumidityResult = StockHumidityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OutdoorTemp", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class OutdoorTempRequest
    {
        
        public OutdoorTempRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OutdoorTempResponse", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class OutdoorTempResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public double OutdoorTempResult;
        
        public OutdoorTempResponse()
        {
        }
        
        public OutdoorTempResponse(double OutdoorTempResult)
        {
            this.OutdoorTempResult = OutdoorTempResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OutdoorHumidity", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class OutdoorHumidityRequest
    {
        
        public OutdoorHumidityRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OutdoorHumidityResponse", WrapperNamespace="http://dvimonitor.pilotdrift.dk/", IsWrapped=true)]
    public partial class OutdoorHumidityResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public double OutdoorHumidityResult;
        
        public OutdoorHumidityResponse()
        {
        }
        
        public OutdoorHumidityResponse(double OutdoorHumidityResult)
        {
            this.OutdoorHumidityResult = OutdoorHumidityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StockItemsUnderMinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StockItemsUnderMin", Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public DVI.StockItemsUnderMinRequestBody Body;
        
        public StockItemsUnderMinRequest()
        {
        }
        
        public StockItemsUnderMinRequest(DVI.StockItemsUnderMinRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class StockItemsUnderMinRequestBody
    {
        
        public StockItemsUnderMinRequestBody()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StockItemsUnderMinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StockItemsUnderMinResponse", Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public DVI.StockItemsUnderMinResponseBody Body;
        
        public StockItemsUnderMinResponse()
        {
        }
        
        public StockItemsUnderMinResponse(DVI.StockItemsUnderMinResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://dvimonitor.pilotdrift.dk/")]
    public partial class StockItemsUnderMinResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public DVI.ArrayOfString StockItemsUnderMinResult;
        
        public StockItemsUnderMinResponseBody()
        {
        }
        
        public StockItemsUnderMinResponseBody(DVI.ArrayOfString StockItemsUnderMinResult)
        {
            this.StockItemsUnderMinResult = StockItemsUnderMinResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StockItemsOverMaxRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StockItemsOverMax", Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public DVI.StockItemsOverMaxRequestBody Body;
        
        public StockItemsOverMaxRequest()
        {
        }
        
        public StockItemsOverMaxRequest(DVI.StockItemsOverMaxRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class StockItemsOverMaxRequestBody
    {
        
        public StockItemsOverMaxRequestBody()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StockItemsOverMaxResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StockItemsOverMaxResponse", Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public DVI.StockItemsOverMaxResponseBody Body;
        
        public StockItemsOverMaxResponse()
        {
        }
        
        public StockItemsOverMaxResponse(DVI.StockItemsOverMaxResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://dvimonitor.pilotdrift.dk/")]
    public partial class StockItemsOverMaxResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public DVI.ArrayOfString StockItemsOverMaxResult;
        
        public StockItemsOverMaxResponseBody()
        {
        }
        
        public StockItemsOverMaxResponseBody(DVI.ArrayOfString StockItemsOverMaxResult)
        {
            this.StockItemsOverMaxResult = StockItemsOverMaxResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StockItemsMostSoldRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StockItemsMostSold", Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public DVI.StockItemsMostSoldRequestBody Body;
        
        public StockItemsMostSoldRequest()
        {
        }
        
        public StockItemsMostSoldRequest(DVI.StockItemsMostSoldRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class StockItemsMostSoldRequestBody
    {
        
        public StockItemsMostSoldRequestBody()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StockItemsMostSoldResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StockItemsMostSoldResponse", Namespace="http://dvimonitor.pilotdrift.dk/", Order=0)]
        public DVI.StockItemsMostSoldResponseBody Body;
        
        public StockItemsMostSoldResponse()
        {
        }
        
        public StockItemsMostSoldResponse(DVI.StockItemsMostSoldResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://dvimonitor.pilotdrift.dk/")]
    public partial class StockItemsMostSoldResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public DVI.ArrayOfString StockItemsMostSoldResult;
        
        public StockItemsMostSoldResponseBody()
        {
        }
        
        public StockItemsMostSoldResponseBody(DVI.ArrayOfString StockItemsMostSoldResult)
        {
            this.StockItemsMostSoldResult = StockItemsMostSoldResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface monitorSoapChannel : DVI.monitorSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class monitorSoapClient : System.ServiceModel.ClientBase<DVI.monitorSoap>, DVI.monitorSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public monitorSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(monitorSoapClient.GetBindingForEndpoint(endpointConfiguration), monitorSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public monitorSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(monitorSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public monitorSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(monitorSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public monitorSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }

        public monitorSoapClient()
        {
        }

        public System.Threading.Tasks.Task<DVI.StockTempResponse> StockTempAsync(DVI.StockTempRequest request)
        {
            return base.Channel.StockTempAsync(request);
        }
        
        public System.Threading.Tasks.Task<DVI.StockHumidityResponse> StockHumidityAsync(DVI.StockHumidityRequest request)
        {
            return base.Channel.StockHumidityAsync(request);
        }
        
        public System.Threading.Tasks.Task<DVI.OutdoorTempResponse> OutdoorTempAsync(DVI.OutdoorTempRequest request)
        {
            return base.Channel.OutdoorTempAsync(request);
        }
        
        public System.Threading.Tasks.Task<DVI.OutdoorHumidityResponse> OutdoorHumidityAsync(DVI.OutdoorHumidityRequest request)
        {
            return base.Channel.OutdoorHumidityAsync(request);
        }
        
        public System.Threading.Tasks.Task<DVI.StockItemsUnderMinResponse> StockItemsUnderMinAsync(DVI.StockItemsUnderMinRequest request)
        {
            return base.Channel.StockItemsUnderMinAsync(request);
        }
        
        public System.Threading.Tasks.Task<DVI.StockItemsOverMaxResponse> StockItemsOverMaxAsync(DVI.StockItemsOverMaxRequest request)
        {
            return base.Channel.StockItemsOverMaxAsync(request);
        }
        
        public System.Threading.Tasks.Task<DVI.StockItemsMostSoldResponse> StockItemsMostSoldAsync(DVI.StockItemsMostSoldRequest request)
        {
            return base.Channel.StockItemsMostSoldAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.monitorSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.monitorSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.monitorSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://dvimonitor.pilotdrift.dk/monitor.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.monitorSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://dvimonitor.pilotdrift.dk/monitor.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            monitorSoap,
            
            monitorSoap12,
        }
    }
}
